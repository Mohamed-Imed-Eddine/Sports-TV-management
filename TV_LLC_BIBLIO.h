#ifndef TV_LLC_BIBLIO_H_INCLUDED
#define TV_LLC_BIBLIO_H_INCLUDED

// implementation de la liste eq (l'entete des foncton + structures)
struct maillon_info {
int rang ;
char eq[11] ;
int npt,nbj,nbg,nbn,nbp,bp,bc,diff ;
struct maillon_info * suivant ;
};

 struct maillon_eq {
char alpha ;
struct maillon_info * equipes ;
struct maillon_eq * suivant ;
};
typedef struct maillon_eq * maillon_eq;
typedef struct maillon_info * maillon_info;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void allouer_eq ( struct maillon_eq * *p);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct maillon_eq * suivant_eq(  struct maillon_eq * p);

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 struct maillon_eq * precedant_eq(  struct maillon_eq * p ,  struct maillon_eq * tete);


   // ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

   struct maillon_info * suivant_info(  struct maillon_info * p);

    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    struct maillon_info * precedant_info(  struct maillon_info * p ,  struct maillon_info * tete);

// ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 3
 void aff_adr_eq( struct maillon_eq * p,  struct maillon_eq * Q);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////4
void allouer_info ( struct maillon_info * *p);


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////6
 void aff_adr_info( struct maillon_info * p,  struct maillon_info * Q);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



  /** Implémentation :   TABLEAU DE CHAINES DE CARACTERES **/


  typedef char * string255 ;
  typedef string255 Typeelem_V16s ;
  typedef Typeelem_V16s * Typevect_V16s ;

  Typeelem_V16s Element_V16s ( Typevect_V16s V , int I1  );


  void Aff_element_V16s ( Typevect_V16s V  , int I1 ,  Typeelem_V16s Val );


    void supprimer ( Typevect_V16s V , int indice ,int nbrElem);

   ////////////////////////////////////////////////////////////////////////////

   ////////////////////////////////////////////////////////////////////////
  /** Variables du programme principal **/
  Typevect_V16s T;
  Typevect_V16s Trr;


// ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// implementation de la liste calendrier (l'entete des foncton + structures)

 typedef struct calendrier * Pointeur ;
typedef  struct calendrier  calendrier;
typedef struct calendrier
{
  char eq1[11];
  char eq2[11];
  int ResEq1;
  int ResEq2;
  struct calendrier *suiv;
}calendrier;

   Pointeur Allouer_calendrier (Pointeur *P);


   void aff_adr_calendrier ( calendrier * P , calendrier * Q);

  Pointeur suivant_calendrier( Pointeur *p);

    //////////////////////////////////////////////////////////////////////////////////////
  Pointeur creationDeLaListeCalendrier(Pointeur *match1);

 ///////////////////////////////////////////////////////////////////////////////////////////
     struct maillon_info * adress_info(struct maillon_eq * tete, char eq[11]);


      void maj (calendrier *z , struct maillon_eq * tete_eq);

//////////////////////////////////////////////////////////////////////////////////////////////////////////
 void  afficherLesMatchsDeLaJournee(calendrier * tete);

 ////////////////////////////////////////////////////////////////////////////////////////////////////////////
 void afficherLesResultatDeLaJournee(calendrier * tete);

    ///////////////////////////////////////////////////////////////////////////////////////////////////////
    void affecterLesMatchsDansLaListeCalendrier(calendrier * tete,  Typevect_V16s T);

 ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   struct majRang
   {
     int points;
     char nomEq[11];
     int diff;
   };
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /** Implémentation ** :  TABLEAU DE ENTIERS **/

  /** Tableaux **/

  typedef int Typeelem_V8i ;
  typedef Typeelem_V8i * Typevect_V8i ;

  /** Variables du programme principal **/

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  void leMatchaDeffuse(calendrier * match1,struct maillon_eq * tete_eq);

  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 struct maillon_eq * triDeLaListe (struct maillon_eq * tete_eq);

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct maillon_eq * creationDeLaListeEqAPartirDuFichierRang();

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 void affecterLesResultatsDansLaListeCalendrier (calendrier * match1);

  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 void misAJourDeLaListeEq(calendrier *match1, struct maillon_eq * tete_eq, char NomDuFichier[50]);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 Typevect_V16s creationDuTableauDesEquipes();

#endif // TV_LLC_BIBLIO_H_INCLUDED
